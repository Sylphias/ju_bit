module alu8 (
    input op [6],
    input a [8],
    input b [8],
    output z,
    output v,
    output n,
    output c [8]
  ) {
  
  .op(op[3:0]) {
    .a(a), .b(b) {
      alu_addr8 adder;
      alu_shift8 shifter;
    }
    alu_bitw bitwise [8];
    alu_cmp_zvn comp (.z(adder.z), .v(adder.v), .n(adder.n));
  }
  
  always {
    // defined separately due to port size
    bitwise.a = a;
    bitwise.b = b;
    
    // choose output based on msbs of opcode
    case ( op[5:4] ) {
      0:
        c = adder.c;
      1:
        c = bitwise.c;
      2:
        c = shifter.c;
      3:
        c = comp.c;
      default:
        c = 0;
    }
    
    // connect z, v, n from adder
    z = adder.z;
    v = adder.v;
    n = adder.n;
  }
}
