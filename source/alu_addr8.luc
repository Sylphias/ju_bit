module alu_addr8 (
    input op [4],
    input a [8],
    input b [8],
    output z,
    output v,
    output n,    
    output c [8]
  ) {
  
  sig t[9]; // for holding sum due to possible overflow
  
  always {
  
    // add or subtract based on lsb of opcode
    if ( op[0] ) {
      t = a - b;
    } else {
      t = a + b;
    }
    
    // compresses result into 1 bit with OR, so z is low if any bit is high
    z = ~(|t[7:0]);
    
    // overflow if sign bit of operands are same (XNOR) and sign bit
    // of result is different (XOR) from sign bit of operands
    v = ( a[7] ~^ b[7] ) & ( t[7] ^ a[7] );
    
    // sign bit
    n = t[7];
    
    // truncate result
    c = t[7:0];
  }
}
